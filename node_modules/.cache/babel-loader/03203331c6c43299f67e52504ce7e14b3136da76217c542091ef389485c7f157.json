{"ast":null,"code":"const listaVideos = () => {\n  return fetch('https://aluraflix-api.vercel.app/videos').then(respuesta => {\n    if (respuesta.ok) {\n      return respuesta.json();\n    }\n    throw new Error('No fue posible listar los videos.');\n  });\n};\nconst cadastraVideo = (titulo, url, img, categoria, descripcion, codigo) => {\n  return fetch('https://aluraflix-api.vercel.app/videos', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      titulo: titulo,\n      url: url,\n      img: img,\n      categoria: categoria,\n      descripcion: descripcion,\n      codigo: codigo\n    })\n  }).then(respuesta => {\n    if (respuesta.ok) {\n      return respuesta.body;\n    }\n    throw new Error('No fue posible registrar un video.');\n  });\n};\nconst video = id => {\n  return fetch(`https://aluraflix-api.vercel.app/videos/${id}`).then(respuesta => {\n    if (respuesta.ok) {\n      return respuesta.json();\n    }\n    throw new Error('No fue posible encontrar el video.');\n  });\n};\nconst listaCategorias = () => {\n  return fetch('https://aluraflix-api.vercel.app/categoria').then(respuesta => respuesta.json()).catch(error => console.log(error));\n};\nconst cadastraCategoria = (nombre, descripcion, color, codigo) => {\n  return fetch('https://aluraflix-api.vercel.app/categoria', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      nombre: nombre,\n      descripcion: descripcion,\n      color: color,\n      codigo: codigo\n    })\n  }).then(respuesta => {\n    if (respuesta.ok) {\n      return respuesta.body;\n    }\n    throw new Error('No fue posible registrar una categoría.');\n  });\n};\nconst removeCategoria = id => {\n  return fetch(`https://aluraflix-api.vercel.app/categoria/${id}`, {\n    method: 'DELETE'\n  }).then(respuesta => {\n    if (!respuesta.ok) {\n      throw new Error('No fue posible eliminar la categoría.');\n    }\n  });\n};\nconst editaCategoria = (id, nombre, descripcion, color, codigo) => {\n  return fetch(`https://aluraflix-api.vercel.app/categoria/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify({\n      nombre: nombre,\n      descripcion: descripcion,\n      color: color,\n      codigo: codigo\n    })\n  }).then(respuesta => {\n    if (respuesta.ok) {\n      return respuesta.json();\n    }\n    throw new Error('No fue posible editar la categoría.');\n  });\n};\nexport const videosService = {\n  listaVideos,\n  cadastraVideo,\n  listaCategorias,\n  cadastraCategoria,\n  removeCategoria,\n  editaCategoria,\n  video\n};","map":{"version":3,"names":["listaVideos","fetch","then","respuesta","ok","json","Error","cadastraVideo","titulo","url","img","categoria","descripcion","codigo","method","headers","body","JSON","stringify","video","id","listaCategorias","catch","error","console","log","cadastraCategoria","nombre","color","removeCategoria","editaCategoria","videosService"],"sources":["C:/Users/PC/IdeaProjects/alura-flix/src/Service/videos-service.js"],"sourcesContent":["const listaVideos = () => {\r\n  return fetch('https://aluraflix-api.vercel.app/videos')\r\n      .then((respuesta) => {\r\n        if (respuesta.ok) {\r\n          return respuesta.json();\r\n        }\r\n        throw new Error('No fue posible listar los videos.');\r\n      });\r\n}\r\n\r\nconst cadastraVideo = (titulo, url, img, categoria, descripcion, codigo) => {\r\n  return fetch('https://aluraflix-api.vercel.app/videos', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      titulo: titulo,\r\n      url: url,\r\n      img: img,\r\n      categoria: categoria,\r\n      descripcion: descripcion,\r\n      codigo: codigo,\r\n    })\r\n  }).then(respuesta => {\r\n    if (respuesta.ok) {\r\n      return respuesta.body;\r\n    }\r\n    throw new Error('No fue posible registrar un video.');\r\n  })\r\n}\r\n\r\nconst video = (id) => {\r\n  return fetch(`https://aluraflix-api.vercel.app/videos/${id}`)\r\n      .then(respuesta => {\r\n        if (respuesta.ok) {\r\n          return respuesta.json();\r\n        }\r\n        throw new Error('No fue posible encontrar el video.')\r\n      });\r\n}\r\n\r\nconst listaCategorias = () => {\r\n  return fetch('https://aluraflix-api.vercel.app/categoria')\r\n      .then(respuesta => respuesta.json())\r\n      .catch(error => console.log(error))\r\n}\r\n\r\nconst cadastraCategoria = (nombre, descripcion, color, codigo) => {\r\n  return fetch('https://aluraflix-api.vercel.app/categoria', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      nombre: nombre,\r\n      descripcion: descripcion,\r\n      color: color,\r\n      codigo: codigo\r\n    })\r\n  }).then(respuesta => {\r\n    if (respuesta.ok) {\r\n      return respuesta.body;\r\n    }\r\n    throw new Error('No fue posible registrar una categoría.');\r\n  })\r\n}\r\n\r\nconst removeCategoria = (id) => {\r\n  return fetch(`https://aluraflix-api.vercel.app/categoria/${id}`, {\r\n    method: 'DELETE'\r\n  }).then(respuesta => {\r\n    if (!respuesta.ok) {\r\n      throw new Error('No fue posible eliminar la categoría.');\r\n    }\r\n  })\r\n}\r\n\r\nconst editaCategoria = (id, nombre, descripcion, color, codigo) => {\r\n  return fetch(`https://aluraflix-api.vercel.app/categoria/${id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      nombre: nombre,\r\n      descripcion: descripcion,\r\n      color: color,\r\n      codigo: codigo\r\n    })\r\n  }).then(respuesta => {\r\n    if (respuesta.ok) {\r\n      return respuesta.json();\r\n    }\r\n    throw new Error('No fue posible editar la categoría.');\r\n  })\r\n}\r\n\r\nexport const videosService = {\r\n  listaVideos,\r\n  cadastraVideo,\r\n  listaCategorias,\r\n  cadastraCategoria,\r\n  removeCategoria,\r\n  editaCategoria,\r\n  video\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}