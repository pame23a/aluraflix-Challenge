{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\IdeaProjects\\\\alura-flix\\\\src\\\\Context\\\\Api.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from \"react\";\nimport { videosService } from \"Service/videos-service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ApiContext = /*#__PURE__*/createContext();\nexport const ApiProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [Categoria, setCategoria] = useState([]);\n  useEffect(() => {\n    videosService.listaCategorias().then(data => setCategoria(data)).catch(err => console.log(err));\n  }, []);\n  const cadastraCategoria = novaCategoria => {\n    videosService.cadastraCategoria(novaCategoria.nome, novaCategoria.descricao, novaCategoria.cor, novaCategoria.codigo);\n    setCategoria([...Categoria, novaCategoria]);\n  };\n  const deletaCategoria = id => {\n    videosService.removeCategoria(id);\n    setCategoria(Categoria.filter(categoria => categoria.id !== id));\n  };\n  const editaCategoria = (edit, props) => {\n    videosService.editaCategoria(edit, props.nome, props.descricao, props.cor, props.codigo);\n    setCategoria(Categoria.map(categ => categ.id !== edit ? categ : props));\n  };\n\n  // Videos \n  const [banner, setBanner] = useState('');\n  const [videos, setVideos] = useState([]);\n  useEffect(() => {\n    videosService.video(1).then(data => setBanner(data)).catch(err => console.log(err));\n  }, []);\n  useEffect(() => {\n    videosService.listaVideos().then(data => setVideos(data)).catch(err => console.log(err));\n  }, []);\n  const mostraVideo = id => {\n    videosService.video(id).then(data => setBanner(data)).catch(err => console.log(err));\n  };\n  const cadastraVideo = novoVideo => {\n    videosService.cadastraVideo(novoVideo.titulo, novoVideo.url, novoVideo.img, novoVideo.categSelec, novoVideo.descricao, novoVideo.codigo);\n    setVideos([...videos, novoVideo]);\n  };\n  return /*#__PURE__*/_jsxDEV(ApiContext.Provider, {\n    value: {\n      Categoria,\n      cadastraCategoria,\n      deletaCategoria,\n      editaCategoria,\n      banner,\n      videos,\n      mostraVideo,\n      cadastraVideo\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(ApiProvider, \"9xj/wsytwQp39BYy77PQARMC9Cg=\");\n_c = ApiProvider;\nexport function useAPI() {\n  _s2();\n  const context = useContext(ApiContext);\n  if (context === undefined) {\n    throw new Error(\"Context must be used within a Provider\");\n  }\n  return context;\n}\n_s2(useAPI, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"ApiProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","videosService","jsxDEV","_jsxDEV","ApiContext","ApiProvider","_ref","_s","children","Categoria","setCategoria","listaCategorias","then","data","catch","err","console","log","cadastraCategoria","novaCategoria","nome","descricao","cor","codigo","deletaCategoria","id","removeCategoria","filter","categoria","editaCategoria","edit","props","map","categ","banner","setBanner","videos","setVideos","video","listaVideos","mostraVideo","cadastraVideo","novoVideo","titulo","url","img","categSelec","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAPI","_s2","context","undefined","Error","$RefreshReg$"],"sources":["C:/Users/PC/IdeaProjects/alura-flix/src/Context/Api.js"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from \"react\";\r\nimport { videosService } from \"Service/videos-service\";\r\n\r\nconst ApiContext = createContext()\r\n\r\nexport const ApiProvider = ({ children }) => {\r\n    const [Categoria, setCategoria] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        videosService.listaCategorias()\r\n        .then(data => setCategoria(data))\r\n        .catch(err => console.log(err));\r\n    }, [])\r\n    \r\n    const cadastraCategoria = (novaCategoria) => {\r\n        videosService.cadastraCategoria(novaCategoria.nome, novaCategoria.descricao, novaCategoria.cor, novaCategoria.codigo);\r\n        setCategoria([...Categoria, novaCategoria])\r\n    }\r\n    \r\n    const deletaCategoria = (id) => {\r\n        videosService.removeCategoria(id)\r\n        setCategoria(Categoria.filter(categoria => categoria.id !== id));\r\n    }\r\n    \r\n    const editaCategoria = (edit, props) => {\r\n        videosService.editaCategoria(edit, props.nome, props.descricao, props.cor, props.codigo);\r\n        setCategoria(Categoria.map(categ => categ.id !== edit ? categ : props))\r\n    }\r\n\r\n    // Videos \r\n    const [banner, setBanner] = useState('');\r\n    const [videos, setVideos] = useState([]);\r\n\r\n    useEffect(() => {\r\n        videosService.video(1)\r\n          .then(data => setBanner(data))\r\n          .catch(err => console.log(err))\r\n      }, [])\r\n    \r\n      useEffect(() => {\r\n        videosService.listaVideos()\r\n          .then(data => setVideos(data))\r\n          .catch(err => console.log(err))\r\n      }, [])\r\n    \r\n      const mostraVideo = id => {\r\n        videosService.video(id)\r\n          .then(data => setBanner(data))\r\n          .catch(err => console.log(err));\r\n      }\r\n\r\n      const cadastraVideo = (novoVideo) => {\r\n        videosService.cadastraVideo(novoVideo.titulo, novoVideo.url, novoVideo.img, novoVideo.categSelec, novoVideo.descricao, novoVideo.codigo);\r\n        setVideos([...videos, novoVideo])\r\n      }\r\n\r\n    return (\r\n        <ApiContext.Provider value={{\r\n            Categoria,\r\n            cadastraCategoria,\r\n            deletaCategoria,\r\n            editaCategoria,\r\n            banner,\r\n            videos,\r\n            mostraVideo,\r\n            cadastraVideo\r\n        }}>\r\n            {children}\r\n        </ApiContext.Provider>\r\n    )\r\n}\r\n\r\nexport function useAPI() {\r\n    const context = useContext(ApiContext);\r\n    if (context === undefined) {\r\n      throw new Error(\"Context must be used within a Provider\");\r\n    }\r\n    return context;\r\n  }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}