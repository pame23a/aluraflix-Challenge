{"ast":null,"code":"const listaVideos = () => {\n  return fetch('https://aluraflix-api.vercel.app/videos').then(responsta => {\n    if (responsta.ok) {\n      return responsta.json();\n    }\n    throw new Error('Não foi possivel listar os Videos.');\n  });\n};\nconst cadastraVideo = (titulo, url, img, categoria, descricao, codigo) => {\n  return fetch('https://aluraflix-api.vercel.app/videos', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      titulo: titulo,\n      url: url,\n      img: img,\n      categoria: categoria,\n      descricao: descricao,\n      codigo: codigo\n    })\n  }).then(resposta => {\n    if (resposta.ok) {\n      return resposta.body;\n    }\n    throw new Error('Não foi possível cadastrar um video.');\n  });\n};\nconst video = id => {\n  return fetch(`https://aluraflix-api.vercel.app/videos/${id}`).then(resposta => {\n    if (resposta.ok) {\n      return resposta.json();\n    }\n    throw new Error('Não foi possivel encontrar Video.');\n  });\n};\nconst listaCategorias = () => {\n  return fetch('https://aluraflix-api.vercel.app/categoria').then(resp => resp.json()).catch(err => console.log(err));\n};\nconst cadastraCategoria = (nome, descricao, cor, codigo) => {\n  return fetch('https://aluraflix-api.vercel.app/categoria', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      nome: nome,\n      descricao: descricao,\n      cor: cor,\n      codigo: codigo\n    })\n  }).then(resposta => {\n    if (resposta.ok) {\n      return resposta.body;\n    }\n    throw new Error('Não foi possível cadastrar uma Categoria.');\n  });\n};\nconst removeCategoria = id => {\n  return fetch(`https://aluraflix-api.vercel.app/categoria/${id}`, {\n    method: 'DELETE'\n  }).then(resposta => {\n    if (!resposta.ok) {\n      throw new Error('Não foi possível remover a categoria.');\n    }\n  });\n};\nconst editaCategoria = (id, nome, descricao, cor, codigo) => {\n  return fetch(`https://aluraflix-api.vercel.app/categoria/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify({\n      nome: nome,\n      descricao: descricao,\n      cor: cor,\n      codigo: codigo\n    })\n  }).then(resposta => {\n    if (resposta.ok) {\n      return resposta.json();\n    }\n    throw new Error('Não foi possível editar categoria.');\n  });\n};\nexport const videosService = {\n  listaVideos,\n  cadastraVideo,\n  listaCategorias,\n  cadastraCategoria,\n  removeCategoria,\n  editaCategoria,\n  video\n};","map":{"version":3,"names":["listaVideos","fetch","then","responsta","ok","json","Error","cadastraVideo","titulo","url","img","categoria","descricao","codigo","method","headers","body","JSON","stringify","resposta","video","id","listaCategorias","resp","catch","err","console","log","cadastraCategoria","nome","cor","removeCategoria","editaCategoria","videosService"],"sources":["C:/Users/PC/IdeaProjects/alura-flix/src/Service/videos-service.js"],"sourcesContent":["const listaVideos = () => {\r\n  return fetch ('https://aluraflix-api.vercel.app/videos')\r\n    .then((responsta) => {\r\n      if (responsta.ok) {\r\n        return responsta.json();\r\n      }\r\n      throw new Error('Não foi possivel listar os Videos.')\r\n    });\r\n}\r\n\r\nconst cadastraVideo = (titulo, url, img, categoria, descricao, codigo) => {\r\n  return fetch('https://aluraflix-api.vercel.app/videos', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      titulo: titulo,\r\n      url: url,\r\n      img: img,\r\n      categoria: categoria,\r\n      descricao:descricao,\r\n      codigo:codigo,\r\n    })\r\n  }).then(resposta => {\r\n    if (resposta.ok) {\r\n      return resposta.body;\r\n    }\r\n    throw new Error('Não foi possível cadastrar um video.');\r\n  })\r\n}\r\n\r\nconst video = (id) => {\r\n  return fetch(`https://aluraflix-api.vercel.app/videos/${id}`)\r\n  .then(resposta => {\r\n    if (resposta.ok) {\r\n      return resposta.json();\r\n    }\r\n    throw new Error('Não foi possivel encontrar Video.')\r\n  });\r\n}\r\n\r\nconst listaCategorias = () => {\r\n  return fetch('https://aluraflix-api.vercel.app/categoria')\r\n  .then(resp => resp.json())\r\n  .catch(err => console.log(err))\r\n}\r\n\r\nconst cadastraCategoria = (nome, descricao, cor, codigo) => {\r\n  return fetch('https://aluraflix-api.vercel.app/categoria', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      nome: nome,\r\n      descricao: descricao,\r\n      cor: cor,\r\n      codigo: codigo\r\n    })\r\n  }).then(resposta => {\r\n    if (resposta.ok) {\r\n      return resposta.body;\r\n    }\r\n    throw new Error('Não foi possível cadastrar uma Categoria.');\r\n  })\r\n}\r\n\r\nconst removeCategoria = (id) => {\r\n  return fetch(`https://aluraflix-api.vercel.app/categoria/${id}`, {\r\n    method: 'DELETE'\r\n  }).then(resposta => {\r\n    if(!resposta.ok) {\r\n      throw new Error ('Não foi possível remover a categoria.');\r\n    }\r\n  })\r\n}\r\n\r\nconst editaCategoria = (id, nome, descricao, cor, codigo) => {\r\n  return fetch(`https://aluraflix-api.vercel.app/categoria/${id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      nome: nome,\r\n      descricao: descricao,\r\n      cor: cor,\r\n      codigo: codigo\r\n    })\r\n  }).then(resposta => {\r\n    if (resposta.ok) {\r\n      return resposta.json();\r\n    }\r\n    throw new Error('Não foi possível editar categoria.');\r\n  })\r\n}\r\n\r\nexport const videosService = {\r\n  listaVideos,\r\n  cadastraVideo,\r\n  listaCategorias,\r\n  cadastraCategoria,\r\n  removeCategoria,\r\n  editaCategoria,\r\n  video\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}