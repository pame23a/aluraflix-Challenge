{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\IdeaProjects\\\\alura-flix\\\\src\\\\Paginas\\\\NovaCategoria\\\\index.js\",\n  _s = $RefreshSig$();\nimport { useContext, useState } from \"react\";\nimport { TextField, ThemeProvider, createTheme } from \"@mui/material\";\nimport styled from \"styled-components\";\nimport BtnSalvarLimpar from \"component/BtnSalvarLimpar\";\nimport ListaCategoria from \"component/ListaCategoria\";\nimport useErros from \"Hooks/useErros\";\nimport ValidacoesFormulario from \"Context/ValidacoesFormulario\";\nimport Swal from 'sweetalert2';\nimport { useAPI } from \"Context/Api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n`;\n_c = Form;\nconst InputColor = styled.input`\n  width: 100%;\n  height: 2.5rem;\n  margin-top: 1rem;\n  background-color: #2e2e2e;\n  padding-top: .7rem;\n`;\n_c2 = InputColor;\nconst darkTheme = createTheme({\n  palette: {\n    mode: 'dark'\n  }\n});\nexport default function NovaCategoria() {\n  _s();\n  const [nome, setNome] = useState('');\n  const [descricao, setDescricao] = useState('');\n  const [cor, setCor] = useState('#000000');\n  const [codigo, setCodigo] = useState('');\n  const [edit, setEdit] = useState('');\n  const validacoes = useContext(ValidacoesFormulario);\n  const [erros, validarCampos, possoEnviar] = useErros(validacoes);\n  const {\n    cadastraCategoria,\n    editaCategoria\n  } = useAPI();\n  const editarCategoria = props => {\n    setNome(props.nome);\n    setDescricao(props.descricao);\n    setCor(props.cor);\n    setCodigo(props.codigo);\n    setEdit(props.id);\n  };\n  const limpar = () => {\n    setNome(\"\");\n    setDescricao(\"\");\n    setCor(\"\");\n    setCodigo(\"\");\n    setEdit(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: darkTheme,\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: event => {\n        event.preventDefault();\n        if (possoEnviar()) {\n          if (!edit) {\n            cadastraCategoria({\n              nome,\n              descricao,\n              cor,\n              codigo\n            });\n            setCodigo('');\n            Swal.fire('Sucesso!', 'Categoria cadastrada com sucesso!', 'success');\n          } else {\n            editaCategoria(edit, {\n              nome,\n              descricao,\n              cor,\n              codigo\n            });\n            setCodigo('');\n            Swal.fire('Sucesso!', 'Categoria editada com sucesso!', 'success');\n          }\n        }\n      },\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Nova Categoria\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        onChange: event => setNome(event.target.value),\n        value: nome,\n        onBlur: validarCampos,\n        error: !erros.nome.valido,\n        helperText: erros.nome.texto,\n        name: \"nome\",\n        label: \"Nome\",\n        variant: \"filled\",\n        margin: \"normal\",\n        fullWidth: true,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        onChange: event => setDescricao(event.target.value),\n        value: descricao,\n        variant: \"filled\",\n        placeholder: \"Descri\\xE7\\xE3o\",\n        multiline: true,\n        rows: 7\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputColor, {\n        onChange: event => setCor(event.target.value),\n        value: cor,\n        name: \"cor\",\n        type: \"color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        onChange: event => setCodigo(event.target.value),\n        value: codigo,\n        onBlur: validarCampos,\n        error: !erros.codigo.valido,\n        helperText: erros.codigo.texto,\n        name: \"codigo\",\n        label: \"C\\xF3digo de seguran\\xE7a\",\n        variant: \"filled\",\n        margin: \"normal\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BtnSalvarLimpar, {\n        limpar: limpar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListaCategoria, {\n      editar: editarCategoria\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(NovaCategoria, \"5Eq2ElgpvOFdODhdHBor4VJS3BA=\", false, function () {\n  return [useErros, useAPI];\n});\n_c3 = NovaCategoria;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Form\");\n$RefreshReg$(_c2, \"InputColor\");\n$RefreshReg$(_c3, \"NovaCategoria\");","map":{"version":3,"names":["useContext","useState","TextField","ThemeProvider","createTheme","styled","BtnSalvarLimpar","ListaCategoria","useErros","ValidacoesFormulario","Swal","useAPI","jsxDEV","_jsxDEV","Form","form","_c","InputColor","input","_c2","darkTheme","palette","mode","NovaCategoria","_s","nome","setNome","descricao","setDescricao","cor","setCor","codigo","setCodigo","edit","setEdit","validacoes","erros","validarCampos","possoEnviar","cadastraCategoria","editaCategoria","editarCategoria","props","id","limpar","theme","children","onSubmit","event","preventDefault","fire","className","fileName","_jsxFileName","lineNumber","columnNumber","onChange","target","value","onBlur","error","valido","helperText","texto","name","label","variant","margin","fullWidth","required","placeholder","multiline","rows","type","editar","_c3","$RefreshReg$"],"sources":["C:/Users/PC/IdeaProjects/alura-flix/src/Paginas/NovaCategoria/index.js"],"sourcesContent":["import { useContext, useState } from \"react\";\r\nimport { TextField, ThemeProvider, createTheme } from \"@mui/material\";\r\nimport styled from \"styled-components\";\r\nimport BtnSalvarLimpar from \"component/BtnSalvarLimpar\";\r\nimport ListaCategoria from \"component/ListaCategoria\";\r\nimport useErros from \"Hooks/useErros\";\r\nimport ValidacoesFormulario from \"Context/ValidacoesFormulario\";\r\nimport Swal from 'sweetalert2'\r\nimport { useAPI } from \"Context/Api\";\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1.5rem;\r\n`\r\n\r\nconst InputColor = styled.input`\r\n  width: 100%;\r\n  height: 2.5rem;\r\n  margin-top: 1rem;\r\n  background-color: #2e2e2e;\r\n  padding-top: .7rem;\r\n`\r\n\r\nconst darkTheme = createTheme({\r\n  palette: {\r\n    mode: 'dark',\r\n  },\r\n})\r\n\r\nexport default function NovaCategoria() {\r\n  const [nome, setNome] = useState('');\r\n  const [descricao, setDescricao] = useState('');\r\n  const [cor, setCor] = useState('#000000');\r\n  const [codigo, setCodigo] = useState('');\r\n  const [edit, setEdit] = useState('');\r\n  const validacoes = useContext(ValidacoesFormulario);\r\n  const [erros, validarCampos, possoEnviar] = useErros(validacoes);\r\n  const {cadastraCategoria, editaCategoria } = useAPI();\r\n\r\n  const editarCategoria = (props) => {\r\n    setNome(props.nome)\r\n    setDescricao(props.descricao)\r\n    setCor(props.cor)\r\n    setCodigo(props.codigo)\r\n    setEdit(props.id)\r\n  }\r\n\r\n  const limpar = () => {\r\n    setNome(\"\")\r\n    setDescricao(\"\")\r\n    setCor(\"\")\r\n    setCodigo(\"\")\r\n    setEdit(\"\")\r\n  }\r\n  \r\n  return (\r\n    <ThemeProvider theme={darkTheme}>\r\n      <Form onSubmit={event => {\r\n        event.preventDefault();\r\n        if(possoEnviar()) {\r\n          if (!edit) {\r\n            cadastraCategoria({nome, descricao, cor, codigo})\r\n            setCodigo('')\r\n            Swal.fire(\r\n              'Sucesso!',\r\n              'Categoria cadastrada com sucesso!',\r\n              'success'\r\n            )\r\n          } else {\r\n            editaCategoria(edit, {nome, descricao, cor, codigo});\r\n            setCodigo('')\r\n            Swal.fire(\r\n              'Sucesso!',\r\n              'Categoria editada com sucesso!',\r\n              'success'\r\n            )\r\n          }\r\n        }\r\n      }} className='container'>\r\n        <h1>Nova Categoria</h1>\r\n        <TextField\r\n          onChange={(event) => setNome(event.target.value)}\r\n          value={nome}\r\n          onBlur={validarCampos}\r\n          error={!erros.nome.valido}\r\n          helperText={erros.nome.texto}\r\n          name=\"nome\"\r\n          label=\"Nome\"\r\n          variant=\"filled\"\r\n          margin='normal'\r\n          fullWidth\r\n          required\r\n        />\r\n        <TextField \r\n          onChange={(event) => setDescricao(event.target.value)}\r\n          value={descricao}\r\n          variant=\"filled\"\r\n          placeholder='Descrição'\r\n          multiline\r\n          rows={7}\r\n        />\r\n        <InputColor\r\n          onChange={(event) => setCor(event.target.value)}\r\n          value={cor}\r\n          name=\"cor\"\r\n          type=\"color\"\r\n        />\r\n        <TextField\r\n          onChange={(event) => setCodigo(event.target.value)}\r\n          value={codigo}\r\n          onBlur={validarCampos}\r\n          error={!erros.codigo.valido}\r\n          helperText={erros.codigo.texto}\r\n          name=\"codigo\"\r\n          label='Código de segurança'\r\n          variant=\"filled\"\r\n          margin='normal'\r\n          required\r\n        />\r\n        <BtnSalvarLimpar limpar={limpar} />\r\n      </Form>\r\n      <ListaCategoria editar={editarCategoria} />\r\n    </ThemeProvider>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}